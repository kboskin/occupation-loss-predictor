version: 2.1

orbs:
  python: circleci/python@2.0.3
  node: circleci/node@5.0.2
  cypress: cypress-io/cypress@3.2.0

jobs:
  autotests_validate:
    description: Run UI and API autotests
    executor: cypress/default
    steps:
      - run:
          name: "PWD"
          command: pwd
      - run:
          name: "ls -la"
          command: ls -la
      - run:
          name: "Move to cypress dir"
          command: cd apps/automation
      - cypress/install
      - persist_to_workspace:
          paths:
            - .cache/Cypress
            - project
          root: ~/apps/automation
      - attach_workspace:
          at: ~/apps/automation
      - cypress/run-tests:
          cypress-command: npx cypress run --component --parallel --record
      


  backend_validate:
    description: Validate Backend [Build, Lint, Test]
    working_directory: ~/occupation-loss-predictor/apps/backend
    executor: python/default
    steps:
      - checkout:
          path: ~/occupation-loss-predictor/
      - python/install-packages:
          pkg-manager: poetry
      - run:
          name: Install dependencies
          command: poetry install
      - run:
          name: Backend Build
          command: poetry build
      - run:
          name: Backend Lint
          command: poetry run flake8
      - run:
          name: Backend Test
          command: poetry run pytest

  frontend_validate:
    description: Validate Frontend [Build, Lint, Test]
    working_directory: ~/occupation-loss-predictor/apps/frontend
    executor: node/default
    steps:
      - checkout:
           path: ~/occupation-loss-predictor/
      - node/install-packages:
          pkg-manager: yarn
      - run:
          command: yarn build
          name: Build app
      - run:
          command: yarn lint
          name: Run linter
      - run:
          command: yarn test
          name: Run tests

  push_to_registry:
    machine:
      image: ubuntu-2204:2022.04.2
    steps:
      - run:
          name: Push docker images
          command: |
            cd apps/backend
            docker login -u "$DOCKER_LOGIN" -p "$DOCKER_PWD" registry.gitlab.com
            docker build -t registry.gitlab.com/abab5/bit-rx/backend:main .
            docker push registry.gitlab.com/abab5/bit-rx/backend:main
            cd ..
            cd frontend
            docker build -t registry.gitlab.com/abab5/bit-rx/frontend:main .
            docker push registry.gitlab.com/abab5/bit-rx/frontend:main

  deploy_all:
    machine:
      image: ubuntu-2204:2022.04.2
    steps:
      - run:
          name: Deploy Everything to the Server
          command: |
            'command -v ssh-agent >/dev/null || ( apk add --update openssh )' 
            eval $(ssh-agent -s)
            echo "$AWS_KEY" | tr -d '\r' | ssh-add -
            mkdir -p ~/.ssh
            chmod 700 ~/.ssh
            ssh-keyscan $AWS_SERVER >> ~/.ssh/known_hosts
            chmod 644 ~/.ssh/known_hosts
            ssh $AWS_USER@$AWS_SERVER 'cd /app && docker compose down && docker compose pull && docker compose up -d db && docker compose up -d app && docker compose up -d frontend'
workflows:
  build_and_test:
    jobs:
      - backend_validate
      - frontend_validate
      - autotests_validate
  build_test_deploy:
    jobs:
      - backend_validate
      - frontend_validate
      - autotests_validate
      - push_to_registry:
          requires:
            - backend_validate
            - frontend_validate
            - autotests_validate
          filters:
            branches:
              only:
                - main
      - deploy_all:
          requires:
            - push_to_registry
          filters:
            branches:
              only:
                - main