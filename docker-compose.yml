version: '3.7'

services:
  statshub: #build: apps/backend
    image: ghcr.io/kboskin/occupation-loss-predictor/backend/statshub:${TAG:-main}
    container_name: "losses-backend"
    networks:
      - app_internal
    env_file:
      - configs/backend/statshub/docker/losses.env
    ports:
      - "8000:80"
    depends_on:
      db:
        condition: service_healthy
    links:
      - db
  db:
    image: postgres:16.3
    container_name: "losses-db"
    command: postgres -c max_connections=100 -c shared_buffers=256MB
    networks:
      - app_internal
    ports:
      - "5432:5432"
    env_file:
      - configs/backend/statshub/docker/losses.env
    volumes:
      - ./var/data/postgres/data:/var/lib/postgresql/data
      - ./configs/backend/statshub/initdb.d:/docker-entrypoint-initdb.d/
    restart: on-failure:3
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 10s
      retries: 5
  frontend: #build: apps/frontend
    image: ghcr.io/kboskin/occupation-loss-predictor/frontend:${TAG:-main}
    container_name: "losses-frontend"
    env_file:
      - configs/frontend/docker/frontend.env
    networks:
      - app_internal
    ports:
      - 3000:3000
    stdin_open: true
  statshub-nginx:
      image: nginx:latest
      container_name: "losses-nginx"
      volumes:
        - ./nginx.conf:/etc/nginx/nginx.conf:ro
        - /etc/letsencrypt:/etc/letsencrypt:ro  # Mounting Letsencrypt certificates
      ports:
        - "80:80"
        - "443:443"
      depends_on:
        - statshub
        - frontend
      networks:
        - app_internal

networks:
  app_internal:
    driver: bridge